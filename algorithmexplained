This algorithm uses a tree structure too keep the allocation information. In this case, an array based tree is implemented. The begining of the chunk memory is being used for keeping the dynamically created tree. In this dynamic allocation stands for creating the tree based on given chunk size. As buddy algorithm requires trees of size 2^n, we take the given chunk size as the lower limit and rounded up the exponential component of 2^n where it stands for the size of the represented virtual memory. 
  The size of the tree is calculated with respect the worst case situation. The worst case situation is defined as there will be lots of 256 byte allocations where the chunk memory is fully allocated. After the calculation the memory for keeping the tree data is also allocated by balloc algorithm. In this case the number of max allocations is chunksize/256 which is 2^(n-1). Thus, the total number of nodes in a tree is 2^n-1 which is the size of the tree in the worst case situtation.
  Nodes of the tree consists of letters as characters only holds 1 byte of memory. Letter 'p' indicates that the node is a parent node, 'a' indicates that the node is an allocated node and 'f' indicates that the node is an available node.
  The head node of the tree is located at the begining adress of the chunk.
  Left child of a parent node is at the index 2*n+1 where n is the index of parent.
  Right child of a parent node is at the index 2*n+1 where n is the index of parent.
  Parent of a child node is at the index (n-1)/2 where n is the index of the child.
  balloc algorithm, looks to the availability array where it indicates available nodes for each different possible size respectively. If there is an available node for desired size, algorithm finds the node. If there is no available node for desired size, algortihm starts from the left of the tree and creates a node for the desired size.
  bfree algorithm finds the related node with respect to given size and frees the node. After freeing the node from it iterates from the leaf to the head and on the way it merges free nodes if they are form the same parent.
